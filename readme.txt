

Dockerを使った今どきのWEBシステム開発


■自己紹介


■今、開発現場で何が起きているのか？

・事例①
　大手ECパッケージ開発会社

　　開発環境、ステージング環境、本番環境の環境差分が2000箇所以上あり、
　　人の手で修正しなければならない。

　　新しいメンバーがプロジェクトに参画し、自分用の開発環境を構築する際に
　　手順書通り行ってもなかなかうまくいかず、環境構築まで1週間かかる。

　　本番サイトをリニューアルするたびに担当者が徹夜して対応。
　　毎回、リリース作業ミスが発生。

　　限定商品販売時などのセールの際に、サイトにアクセスが集中して、
　　サイトに接続できない状況が発生。


・事例②
　大手施設情報検索＆予約サイト
　　飲食店、薬局、整体、エステなど、会員数2800万人が利用するサービスを展開

　　日曜日の昼間に基幹システムに不具合が発生し、飲食店、薬局、整体、エステなどの
　　予約サービスがすべて止まるという大規模障害が発生した。


・事例③
　AWSの大規模障害
　2019/8/23に東京リージョン（ap-northeast-1）にて、データセンターで
　冷却システムに不具合が発生し、サーバーの温度が上昇したために、電源が停止。

　コンテナ化していたサービスは早く復旧ができた。
　AWS Fargateを使用しているサービスは自動復旧できた。


https://www.itmedia.co.jp/news/articles/1908/28/news127.html


■今、開発現場で求められているもの

１．コンテナ化(DevOps、マイクロサービス)
２．サーバレス


■モノリスとマイクロサービス

https://codezine.jp/article/detail/11055



■目標
Dockerを使って、3層アーキテクチャ(フロント、バックエンド、DB)を
簡単にローカル開発環境とWEB本番環境にデプロイできるようにする。


■Dockerとは？
コンテナ型仮想化技術を実現するソフトウェア。
「パソコンの中に仮想のパソコンを起動する」


■なぜDockerなのか？

git
VSCode
docker


■Dockerのメリット


■Dockerでできないこと

GUIが使えない
Dockerの中で動くのはLinux系OSのみ
x86系CPU用のイメージはARM系CPUでは動作しない

■Dockerを使うデメリット
遅くなる




https://www.itmedia.co.jp/news/articles/1908/28/news127.html



■サーバレス

https://dev.classmethod.jp/articles/cmdevio2019-container/

https://qiita.com/takanorig/items/3a3a0b43b5be5b4a124f

